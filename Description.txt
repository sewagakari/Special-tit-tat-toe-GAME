電子工作マルバツゲームの説明を開いてくれてありがとうございます．
ここでは遊び方・ルールと，コードの説明について記載しています．
実物の写真は私のポートフォリオサイトに掲載しています．URLはこちら→

１．遊び方・ルール
　基本的な遊び方・ルールはマルバツゲーム（三目並べ）と一緒になっています．特殊ルールとして，盤面には色がそれぞれ３つまでしか置くことができません．
　機器がいつどこに何色が置かれたかを記憶しており，４つ目以降が置かれた場合，一番最初に置かれたもの（古い順）から消えていきます．
  自分と相手の盤面が次にどこが消えるかを記憶して，タテヨコナナメを揃えるように頑張りましょう！（ゲキムズ）

　使用PICマイコン：PIC16F1827

２．コード説明
　2.1　関数
　　作成使用した関数を以下にリストにしました．
　　　・reset()       　：　リセット関数，勝敗確定時に９個のボタンのうちどれかを押すと盤面の記録がリセットされて初期化される．
　　　・wait()　        ：　待機・点灯関数，消灯点灯の時間比率を調整するため，また，勝敗確定時に点灯させる機能を持つ．
　　　・lightdown()　   ：　消灯関数，盤面と順番LEDの両方を完全にオフにするための関数．
　　　・turn1,2()     　：　順番LED点灯関数，現在どちらのターンかを示すためのLEDを点灯させるための関数．
　　　・limitg,r()    　：　盤面点灯数制限関数，盤面に４つ以上の色が置かれないようにする機能．キューに新しい場所を登録する．
　　　・renewg,r()　    ：　リニューアル関数，盤面を記憶していく関数．上とほぼ同じ機能．
　　　・catchbutton()　 ：　ボタン判定関数，どのボタンが押されたかを判定する関数．
　　　・lightenlimit()　：　盤面点灯関数，limitg,r配列に登録されている場所を点灯させる関数．右の縦列から順に発光させる．（同時には光らない）
　　　・judge()　       ：　勝利判定関数，タテヨコナナメで色が揃ったかを判定する関数．最後の入力に対して，縦と横，斜めを調査する．

  2.2　動作
　　メインループの処理を順に示します．
　　１．ボタンが押されているかを見る．
　　２．player変数によって順番LEDを赤，緑のどちらに点灯させるかを判定して順番LEDを点灯させる．（ここでwait関数を挟むことによって光らせている時間を増やし消灯点灯の時間比率を点灯に傾け，光を強くする）
　　３．盤面を全消灯（順番LEDは盤面の情報から取ってきているため，盤面の発光をいじると順番LEDも動いてしまう）
　　４．右縦列を点灯
　　５．中央列を点灯
　　６．左縦列を点灯（全てを同時に発光させられないため）
　　７．最後に押されたボタンを見て，その縦列，横列，斜め列が揃っているかを判定する．揃っていた場合win変数に勝利したほうの値を代入する．
　　８．盤面を全消去
　　９．１に戻り以下ループ
